# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-08-31 18:03
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attempt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.TextField()),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('result', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('used_memory', models.PositiveIntegerField(blank=True, null=True)),
                ('used_time', models.FloatField(blank=True, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('lock_version', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'attempts',
                'get_latest_by': 'time',
            },
        ),
        migrations.CreateModel(
            name='Clarification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('answer', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'clarifications',
                'get_latest_by': 'created_at',
            },
        ),
        migrations.CreateModel(
            name='Compiler',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_name', models.CharField(max_length=32)),
                ('name', models.CharField(max_length=255)),
                ('extension', models.CharField(max_length=255)),
                ('compile_string', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'compilers',
                'get_latest_by': 'created_at',
            },
        ),
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('duration', models.PositiveIntegerField(blank=True, null=True)),
                ('freezing_time', models.IntegerField(blank=True, null=True)),
                ('is_school', models.BooleanField()),
                ('is_admin', models.BooleanField()),
                ('is_training', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'contests',
                'get_latest_by': 'created_at',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contest', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, to='core.Contest')),
            ],
            options={
                'db_table': 'notifications',
                'get_latest_by': 'created_at',
            },
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('path', models.CharField(max_length=255)),
                ('author', models.CharField(blank=True, db_index=True, max_length=64)),
                ('developer', models.CharField(blank=True, db_index=True, max_length=64)),
                ('origin', models.CharField(blank=True, db_index=True, max_length=128)),
                ('description', models.TextField()),
                ('input_specification', models.TextField(blank=True)),
                ('output_specification', models.TextField(blank=True)),
                ('samples', models.TextField(blank=True)),
                ('explanations', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('input_file', models.CharField(blank=True, max_length=16)),
                ('output_file', models.CharField(blank=True, max_length=16)),
                ('time_limit', models.PositiveIntegerField()),
                ('memory_limit', models.PositiveIntegerField()),
                ('checker', models.CharField(max_length=255)),
                ('mask_in', models.CharField(max_length=255)),
                ('mask_out', models.CharField(blank=True, max_length=255)),
                ('analysis', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'problems',
                'get_latest_by': 'created_at',
            },
        ),
        migrations.CreateModel(
            name='ProblemInContest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField()),
                ('score', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problem_in_contest_set', to='core.Contest')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problem_in_contest_set', to='core.Problem')),
            ],
            options={
                'db_table': 'problem_in_contests',
                'get_latest_by': 'created_at',
                'verbose_name_plural': 'problems in contest',
                'default_related_name': 'problem_in_contest_set',
            },
        ),
        migrations.CreateModel(
            name='TestInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_number', models.PositiveIntegerField()),
                ('result', models.CharField(blank=True, max_length=255, null=True)),
                ('used_memory', models.PositiveIntegerField(blank=True, null=True)),
                ('used_time', models.FloatField(blank=True, null=True)),
                ('attempt', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, to='core.Attempt')),
            ],
            options={
                'db_table': 'test_infos',
            },
        ),
        migrations.AddField(
            model_name='contest',
            name='problems',
            field=models.ManyToManyField(through='core.ProblemInContest', to='core.Problem'),
        ),
        migrations.AddField(
            model_name='clarification',
            name='contest',
            field=models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, to='core.Contest'),
        ),
        migrations.AddField(
            model_name='clarification',
            name='user',
            field=models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='attempt',
            name='compiler',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Compiler'),
        ),
        migrations.AddField(
            model_name='attempt',
            name='problem_in_contest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.ProblemInContest'),
        ),
        migrations.AddField(
            model_name='attempt',
            name='user',
            field=models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
